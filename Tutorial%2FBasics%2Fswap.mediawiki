We want to have a generic version, similar to the function `ExchangeFirstValues` on the previous page. 
Hence we could define the function as follows:
[[Include(source:trunk/core/demos/tutorial/basics/swap.cpp, fragment=swap-declaration)]]
The function is now quite generic allowing any container of type `T`. 
In addition we specify two positions that should be swapped (as integers which is not really generic, but it suffices for the demo) an the length of the swapped region. 
Now we can define a helper variable `help`, which can be of type `T`.
[[Include(source:trunk/core/demos/tutorial/basics/swap.cpp, fragment=swap-metafunction)]]
and do the swapping
[[Include(source:trunk/core/demos/tutorial/basics/swap.cpp, fragment=swap-work)]]
Thats it. 
We can now test our generic swap function using for example a `String` of characters or a `String` of integers.
[[Include(source:trunk/core/demos/tutorial/basics/swap.cpp, fragment=swap-apply)]]

The whole program taken together looks as follows:
[[Include(source:trunk/core/demos/tutorial/basics/swap.cpp, fragment=swap-headers)]]
[[Include(source:trunk/core/demos/tutorial/basics/swap.cpp, fragment=swap-declaration)]]
[[Include(source:trunk/core/demos/tutorial/basics/swap.cpp, fragment=swap-metafunction)]]
[[Include(source:trunk/core/demos/tutorial/basics/swap.cpp, fragment=swap-work)]]
[[Include(source:trunk/core/demos/tutorial/basics/swap.cpp, fragment=swap-main)]]
[[Include(source:trunk/core/demos/tutorial/basics/swap.cpp, fragment=swap-apply)]]

The output of the program is:
{{{
#!html
<pre class="wiki" style="background-color:black;color:lightgray">
 darwin10.0 : ./demos/tutorial_swap 
ATTAAATT
133111311333
}}}