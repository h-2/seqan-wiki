
== SeqAn Changelog ==

This file summarizes the changes to the SeqAn library and apps.
Also see wiki:KnownIssues.

[[TOC()]]

=== Release 1.4.1 ===

This minor release should be backward compatible with 1.4.
It contains small fixes and many demos for improving the API documentation.
Some file format functionality has been added.

'''Highlights'''

*Many new demos and improved API documentation throughout the library.
*New file format support and tutorials for this functionality: [[Tutorial/VcfIO| VCF I/O]], [[Tutorial/BedIO| BED I/O]], and improvements to [[Tutorial/GffGtfIO| GFF and GTF I/O]].

'''Selected Bug Fixes'''

*<tt>gff_io.h</tt> does not contain corrupt includes any more
*Gapped X-drop seed extension now works with score matrices such as BLOSUM60.
*SAM writer code now writes <tt>255</tt> for invalid <tt>MAPQ</tt> and <tt>0</tt> for invalid/unapplicable <tt>TLEN</tt> instead of <tt>*</tt>.
*Fix in Postorder ParentLinks VSTree Iterator.
*<tt>SEQAN_PATH_TO_ROOT()</tt> can now be used in demo programs.
*Removing duplicate definition of <tt>SEQAN_ENABLE_TESTING</tt> in build system.
*Write support for <tt>char *</tt> for <tt>BamTagsDict</tt>.
*Fix in <tt>StringEnumerator</tt>. 
*Fix writing out of file extension when writing KNIME plugins.

=== Release 1.4 ===

'''Highlights'''

*New read mappers applications MASAI and RazerS 3.
*Extended and more robust I/O Functionality in <tt>stream</tt>, <tt>seq_io</tt>, <tt>bam_io</tt>, and <tt>gff_io</tt>.
*Module arg_parse creates improved command line help and supports workflow engine integration.
**Also see https://github.com/genericworkflownodes
*Greatly improved alignment module with better performance and interfaces.
*Greatly improved build system, <tt>find_package(SeqAn)</tt> for your CMake build systems.

==== New Apps ====

*ALF
**Alignment free sequence comprison.
*Breakpoint Calculator
**Breakpoint computation for genomic alignments.
*MASAI
**Fast index-based read mapper.
*RazerS 3
**Fast filtration-based, parallel read mapper.
*SnpStore
**SNP and small indel calling.

==== Major App Updates ====

*All applications now use the ArgumentParser and have better CLI help.
*Rabema
**Rewritten from scratch, includes BAM support.
**Greatly lowered memory requirements.
*SeqCons
**Fixing input bugs, supports SAM I/O now.
*Stellar
**Major update improving running time, including bug fixes, and allowing for various alphabet types.
*MicroRazerS
**Adding support for SAM output.

==== Major Library Updates ====

*Modules <tt>seq_io</tt>, <tt>bam_io</tt>, <tt>gff_io</tt> with I/O functionality.
*FM Index in module <tt>index</tt>.
*Rewritten <tt>align</tt> module with better performance, more consistent interfaces.
*Split alignment module <tt>align_split</tt>.
*Metaprogramming: introducing <tt>EnableIf</tt>, <tt>DisableIf</tt>, <tt>EnableIf2</tt>, and <tt>DisableIf2</tt> metafunctions 
*Module <tt>alignment_free</tt> for alignment free sequence comparison.
*Module <tt>journaled_set</tt> for managing many similar sequences.
*Faster open addressing q-gram index.
*generic support for memory mapped files via FileMapping class
*Adding module <tt>parallel</tt> with atomic operations in C++98.
*Greatly improved FragmentStore documentation.
*Adding <tt>position()</tt>, <tt>operator-()</tt>, <tt>operator[]</tt> with proxy functionality and relation operators to journaled string iterator. 
*Pigeonhole-based filter algorithm.
*Parallel repeat finding.
*LLVM Support, C++11 support

==== Major Library Bug Fixes ====

*Fixing repeat finding on Dna5Q. 
*Fixing insert size computation in store_all.h 
*Fixing memory initialization problem in <tt>appendValue()</tt> for Block String.
*Default constructor of Iter modified, such that data_container and data_position are initialized 
*fixed: error loading Fasta on Windows 
*fixed wrong StringSet size types, allow to easily subclass Alloc strings 
*now supports SAM files with missing read sequences 
*Fixing SeqAn code for C++11
*FragmentStore fixes.

==== Miscellaneous ====

*Experimental support added platforms for ICC and PGI compilers.
*Experimental support for CUDA.
*Build System
**Large updates to build system.
**Includes <tt>FindSeqAn.cmake</tt> for easily using SeqAn in your own CMake build system.
**Packaging now based on CPack
*Xcode plugin for MacPorts LLVM/Clang in Xcode 3 and 4
*Improved code generator <tt>skel.py</tt>.
*Many minor bug fixes
*Cleaned code base
*Added test cases (e.g. Stellar)
*Improved documentation and added examples (Mason, Rabema, RazerS, etc.)
*Improving coding style compliance of Array String implementation. 
*Various tool improvements (e.g. RazerS 3)
*Performance improvements



{{TracNotice|{{PAGENAME}}}}